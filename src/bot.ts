// src/bot.ts
import { Bot } from 'grammy';
import { BOT_TOKEN } from './config';
import { registerStartCommand } from './commands/start';
import { registerContestsCommand } from './commands/contests';
import { registerSubscribeCommand } from './commands/subscribe';
import { initScheduler } from './services/scheduler';
import { logger } from './utils/logger';

async function main() {
    // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
    logger.info('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç –§–°–ü...');

    const bot = new Bot(BOT_TOKEN);

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    registerStartCommand(bot);
    registerContestsCommand(bot);
    registerSubscribeCommand(bot);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    initScheduler(bot);

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        const me = await bot.api.getMe();
        logger.info(`‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ @${me.username} (id=${me.id})`);
    } catch (err) {
        logger.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ: ${err}`);
        process.exit(1);
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º polling (—ç—Ç–æ—Ç –≤—ã–∑–æ–≤ –±–ª–æ–∫–∏—Ä—É—é—â–∏–π)
    await bot.start();
}

main().catch(err => {
    logger.error(`‚ùå –û—à–∏–±–∫–∞ –≤ main(): ${err}`);
    process.exit(1);
});
